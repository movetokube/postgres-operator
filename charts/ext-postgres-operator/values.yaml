# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: movetokube/postgres-operator
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# Override chart name, defaults to Chart.name
nameOverride: ""
# Full chart name override
fullnameOverride: ""

serviceAccount:
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

# Additionnal labels to add to the pod.
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Which namespace to watch in kubernetes, empty string means all namespaces
watchNamespace: ""

# Define connection to postgres database server
postgres:
  # postgres hostname
  host: "localhost"
  # postgres admin user and password
  user: "admin"
  password: "password"
  # additional connection args to pg driver
  uri_args: ""
  # postgres cloud provider, could be AWS, Azure, GCP or empty (default)
  cloud_provider: ""
  # default database to use
  default_database: "postgres"

# Volumes to add to the pod.
volumes: []

# Volumes to mount onto the pod.
volumeMounts: []

# Existing secret where values to connect to Postgres are defined.
# If not set a new secret will be created, filled with information under the postgres key above.
existingSecret: ""

# Additionnal environment variables to add to the pod (map of key / value)
env: {}

nodeSelector: {}

tolerations: []
